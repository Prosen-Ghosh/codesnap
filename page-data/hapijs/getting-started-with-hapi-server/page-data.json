{"componentChunkName":"component---src-templates-blog-post-js","path":"/hapijs/getting-started-with-hapi-server/","webpackCompilationHash":"1d16e012326f4b07ae8c","result":{"data":{"site":{"siteMetadata":{"title":"Codesnap","author":"Prosen Ghosh"}},"markdownRemark":{"id":"7dae4268-c64e-53ee-85d4-152c4d1c0e40","html":"<h2 id=\"আপনার-প্রথম-hello-world-সার্ভার\"><a href=\"#%E0%A6%86%E0%A6%AA%E0%A6%A8%E0%A6%BE%E0%A6%B0-%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A6%A5%E0%A6%AE-hello-world-%E0%A6%B8%E0%A6%BE%E0%A6%B0%E0%A7%8D%E0%A6%AD%E0%A6%BE%E0%A6%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>আপনার প্রথম “Hello World” সার্ভার</h2>\n<p>এইখানে, আপনি একটি নতুন hapi server তৈরি করবেন। আপনার মেশিনে একটি নতুন প্রজেক্ট ফোল্ডার <code class=\"language-text\">someproject</code> তৈরি করুন যাতে প্রয়োজনীয় ফাইল থাকবে।</p>\n<p>আপনি যদি <code class=\"language-text\">linux</code> অথবা <code class=\"language-text\">mac</code> user হন তাহলে terminal open (<code class=\"language-text\">hit:</code><kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>T</kbd>) করে নিচের command টি run করেন। command টি run করলে current directory তে একটা নতুন folder <code class=\"language-text\">someproject</code> তৈরী করবে এবং current directory change করে <code class=\"language-text\">someproject</code> directory তে চলে যাবে।</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> someproject <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> someproject</code></pre></div>\n<p><strong>project এর dependency install করার জন্যে আমরা <a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NPM</a> (node package manager) use করবো যাতে সহজে dependency গুলা install করা যাই।</strong></p>\n<p>এখন, <code class=\"language-text\">npm init</code> run করতে হবে। এই command run করলে কিছু information চাইবে আমরা default information রেখেই করতে পারি পরে ইচ্ছা হলে change করা যাবে <code class=\"language-text\">package.json</code> থেকে। </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> init -y <span class=\"token comment\"># Generate it without having it ask any questions</span></code></pre></div>\n<p>এখন আপনার project folder এ <code class=\"language-text\">package.json</code> add হয়ে গেছে, আপনি এখন project dependency অ্যাড করতে পারবেন। তাহলে hapi project dependency তে অ্যাড করি এবং <code class=\"language-text\">package.json</code> এ project dependency হিসাবে save করে রাখি।</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> @hapi/hapi -S <span class=\"token comment\"># saving hapi as a dependency by adding -S to npm i</span></code></pre></div>\n<h2 id=\"বেসিক-hapi-সার্ভার\"><a href=\"#%E0%A6%AC%E0%A7%87%E0%A6%B8%E0%A6%BF%E0%A6%95-hapi-%E0%A6%B8%E0%A6%BE%E0%A6%B0%E0%A7%8D%E0%A6%AD%E0%A6%BE%E0%A6%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>বেসিক hapi সার্ভার</h2>\n<p>নীচে code snippet এ একটি খুব basic server দেখানো হয়েছে। প্রথমত, আপনাকে hapi module <code class=\"language-text\">require</code> করতে হবে এবং একটি নতুন <code class=\"language-text\">Hapi.Server()</code> শুরু করতে হবে। এরপরে, <code class=\"language-text\">Server</code> এর <code class=\"language-text\">server options</code> হিসাবে <code class=\"language-text\">host</code> এবং <code class=\"language-text\">port</code> বলে দিতে হবে ।</p>\n<p>এইখানে, <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/IIFE\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">IIFE</a> এর মধ্যে server run করার code লিখেছি। </p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// server.js</span>\n\n<span class=\"token keyword\">const</span> Hapi <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@hapi/hapi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>  \n  <span class=\"token comment\">// start your server</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// create a server with a host and port</span>\n    <span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Hapi<span class=\"token punctuation\">.</span>Server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>  \n<span class=\"gatsby-highlight-code-line\">      host<span class=\"token punctuation\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      port<span class=\"token punctuation\">:</span> <span class=\"token number\">3000</span></span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">await</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Server running at: '</span><span class=\"token punctuation\">,</span> server<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">.</span>uri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// IIFE</span></code></pre></div>\n<p>প্রকৃতপক্ষে, এটি একটি খুব basic hapi server। <code class=\"language-text\">server.js</code> নামে একটি file create করুন এবং কোড ওই file এ লিখুন।</p>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token title important\"><span class=\"token punctuation\">#</span> file stracture</span>\n\n|-- node_modules\n|-- package.json\n|-- server.js</code></pre></div>\n<h2 id=\"hello-world-route\"><a href=\"#hello-world-route\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hello World Route</h2>\n<p>server run হওয়ার পর একটা route দরকার যেখানে request করলে “Hello World” লেখাটা response হিসাবে পাবো। </p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\">server<span class=\"token punctuation\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span>  method<span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n  path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">handler</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> h</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">server.js</code> file এ route টা add করলে code দেখতে নিচের কোডের মতো হবে। </p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// server.js</span>\n\n<span class=\"token keyword\">const</span> Hapi <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@hapi/hapi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>  \n  <span class=\"token comment\">// start your server</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// create a server with a host and port</span>\n    <span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Hapi<span class=\"token punctuation\">.</span>Server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>  \n      host<span class=\"token punctuation\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span>\n      port<span class=\"token punctuation\">:</span> <span class=\"token number\">3000</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\">    server<span class=\"token punctuation\">.</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">      method<span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token function-variable function\">handler</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> h</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token comment\">// business logic</span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n    <span class=\"token keyword\">await</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Server running at: '</span><span class=\"token punctuation\">,</span> server<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">.</span>uri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// IIFE</span></code></pre></div>\n<p>এখন, code <code class=\"language-text\">server.js</code> file এ save করে run করার পর <a href=\"localhost:3000\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">localhost:3000</a> এ request করলে response এ <code class=\"language-text\">Hello World!</code> লেখা পাওয়া যাবে।</p>\n<p>এইখানে <code class=\"language-text\">method</code> property যেকোনো valid <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HTTP</a> method হতে পারে, method একটা array of method ও হতে পারে (<code class=\"language-text\">e.g: [&#39;GET&#39;, &#39;POST&#39;]</code>)। <code class=\"language-text\">path</code> property define করে <a href=\"https://stackoverflow.com/a/18768849/3290456\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">endpoint URL</a> এই route এর যেখানে request করবেন । আর আপনার route এর main business logic গুলা handler এর মধ্যে লিখতে হবে। handler এ অবশ্যই return করতে হবে তা না হলে error দিবে। </p>\n<h2 id=\"run-the-server\"><a href=\"#run-the-server\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Run the server</h2>\n<p>project folder এ গিয়ে terminal open করে নিচের command টি run করলে server start হবে। </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ node server.js</code></pre></div>\n<p>অসাধারণ 🎉, আপনি আপনার প্রথম hapi server তৈরি করেছেন 😍!</p>\n<p>See The <a href=\"https://gist.github.com/Prosen-Ghosh/2d27eb4f6913032be2b3578092187841\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Full Code</a></p>","timeToRead":3,"frontmatter":{"title":"Getting Started with Hapi Server.","date":"October 25, 2019","spoiler":"এইখানে, আপনি একটি নতুন hapi server তৈরি করবেন। আপনার মেশিনে একটি নতুন প্রজেক্ট ফোল্ডার someproject তৈরি করুন যাতে প্রয়োজনীয় ফাইল থাকবে।","author":"Prosen Ghosh","occupation":"Full Stack Developer @ HungryNaki","twitter":"prosenghosh25","gitHub":"Prosen-Ghosh","stackOverflow":"3290456/prosen-ghosh","linkedin":"prosen-ghosh","tags":"JavaScript,NodeJs,HapiJs"},"fields":{"slug":"/hapijs/getting-started-with-hapi-server/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/hapijs/getting-started-with-hapi-server/"}}}