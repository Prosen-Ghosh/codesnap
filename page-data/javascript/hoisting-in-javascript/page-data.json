{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/hoisting-in-javascript/","webpackCompilationHash":"3efa090a9bf934c2e3ff","result":{"data":{"site":{"siteMetadata":{"title":"Codesnap","author":"Prosen Ghosh"}},"markdownRemark":{"id":"0e9262d3-cd94-588a-a9b3-0644885dca90","html":"<h2 id=\"undefined-vs-referenceerror\"><a href=\"#undefined-vs-referenceerror\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Undefined vs ReferenceError</h2>\n<p>Hoisting নিয়ে কিছু বলার আগে আমরা কিছু ছোট ছোট code দেখবো এবং output guess করবো। </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Global Scope</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>guess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ??</span></code></pre></div>\n<p>যদি আপনি <code class=\"language-text\">ReferenceError</code> guess করে থাকেন তাহলে ঠিক আছে, যেহেতু <code class=\"language-text\">guess</code> নামে কোন variable declare করা হয়নি সেহেতু <code class=\"language-text\">ReferenceError</code> দিবে। এবার নিচের code টা guess করবো। </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Global Scope</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>guess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ??</span>\n<span class=\"token keyword\">var</span> guess<span class=\"token punctuation\">;</span></code></pre></div>\n<p>আবার ও যদি আপনি <code class=\"language-text\">ReferenceError</code> guess করে থাকেন তাহলে ভুল। একটু পরে বলছি কেন ভুল। আর একটা কোড দেখি…</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">guess <span class=\"token operator\">=</span> <span class=\"token number\">28</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">localScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// local scope</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>guess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ??</span>\n    <span class=\"token keyword\">var</span> guess<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">localScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>এই কোড টা থেকে কি আউটপুট এক্সপেক্ট করেছিলেন? <strong><code class=\"language-text\">28</code></strong>?? যদি করে থাকেন তাহলে ও আপনি ভুল। </p>\n<p align=\"center\">\n  <img src=\"/codesnap/6124b2ddffa99cc0b0b142779594616d/giphy.gif\" alt=\"giphy.gif\">\n</p>\n<h2 id=\"hoisting-কি\"><a href=\"#hoisting-%E0%A6%95%E0%A6%BF\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hoisting কি?</h2>\n<p>Hoisting একটি JavaScript mechanism যেখানে code execution করার আগে variable এবং function declarations তাদের <a href=\"/codesnap/javascript/understanding-scope-in-javascript\">scope</a> এ সবার উপরে নিয়ে যাওয়া হয়। আরো ভালো ভাবে বলতে গেলে শুধু মাত্র declaration part টুকু ওই scope এ সবার উপরে চলে যাবে কিন্তু assignment part টুকু ওই জায়গাতেই থাকবে যেখানে variable কে assign করা হয়েছে। </p>\n<p>এই কাজ টা আপনি না করলে ও JavaScript engine করে নেই, কিন্তু good practice হচ্ছে variable অথবা function আগে declare করে তার পর use করা। </p>\n<h2 id=\"variables-hoisting-ভেরিএবলেস-হইস্টিং\"><a href=\"#variables-hoisting-%E0%A6%AD%E0%A7%87%E0%A6%B0%E0%A6%BF%E0%A6%8F%E0%A6%AC%E0%A6%B2%E0%A7%87%E0%A6%B8-%E0%A6%B9%E0%A6%87%E0%A6%B8%E0%A7%8D%E0%A6%9F%E0%A6%BF%E0%A6%82\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Variables Hoisting (ভেরিএবলেস হইস্টিং)</h2>\n<p>উপরের code গুলা যদি JavaScript এর এই mechanism follow করে লিখি তাইলে কোড গুলা দেখতে নিচের code গুলার মতো হবে। </p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Global Scope</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">var</span> guess<span class=\"token punctuation\">;</span></span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>guess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"undefined\"</span></code></pre></div>\n<p>এবং </p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Global Scope</span>\n\nguess <span class=\"token operator\">=</span> <span class=\"token number\">28</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">localScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// local scope</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">var</span> guess<span class=\"token punctuation\">;</span></span>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>guess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"undefined\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">localScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>variable যে host হয়েছে এইটা নিচের এই code টা ভালো ভাবে লক্ষ্য করলে দেখা যাবে global scope এ একটা variable <code class=\"language-text\">guess</code> এর assignment আছে (<code class=\"language-text\">guess = 28;</code>), আবার local scope এর মধ্যে <code class=\"language-text\">guess</code> variable এর  declaration আছে (<code class=\"language-text\">var guess;</code>)।  যেহেতু local scope এ declaration আছে সেহেতু <code class=\"language-text\">console.log</code> ওই scope এর variable-ই আগে পাবে এবং <code class=\"language-text\">guess</code> variable এর referance খোঁজা বন্ধ করে দিবে এবং console এ <code class=\"language-text\">&quot;undefined&quot;</code> print করবে। </p>\n<p>যদি কোনো variable এর declaration না থাকে, কিন্তু assignment আছে তাহলে সেটা global scope এ declare হয়। </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Glocal Scope</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">isHoisted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    a <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">isHoisted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ??</span></code></pre></div>\n<p>বেপার টা আরো ভালো ভাবে বোঝার জন্যে আমরা local scope এর মধ্যে আরো একটা local scope তৈরী করবো এবং <strong><code class=\"language-text\">a</code></strong> কে ওই local scope এ <code class=\"language-text\">20</code> assign করবো। </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Glocal Scope</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">isHoisted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">innerLocalScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        a <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">innerLocalScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">isHoisted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 20</span></code></pre></div>\n<p>তাহলে এখন guess করে বলতে হবে নিচের code এর first <code class=\"language-text\">console.log</code> এ কি print হবে?</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Glocal Scope</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">isHoisted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">innerLocalScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        a <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">innerLocalScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"gatsby-highlight-code-line\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ??</span></span><span class=\"token function\">isHoisted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>আমি জানি আপনি ঠিক ধরেছেন এইটা <code class=\"language-text\">ReferenceError</code> হবে কারণ function কে invoke করার আগে <code class=\"language-text\">console.log</code> দেয়া ছিল, যেহেতু function invoke হয়নি সেহেতু assignment ও হয়নি আর এইকারণে engine এর global scope এ <strong><code class=\"language-text\">a</code></strong> কে declare ও করতে হয়নি আর আপনি <code class=\"language-text\">console.log</code> এ <code class=\"language-text\">ReferenceError</code> পেয়েছেন। </p>\n<p><strong><code class=\"language-text\">let</code> আর <code class=\"language-text\">const</code> block scoped</strong> এই ২টা keyword দিয়ে variable declare করলে ওই variable hoist হয় না। <code class=\"language-text\">const</code> এর ক্ষত্রে তো declaration আর assignment একসাথেই হতে হবে তা না হলে error দেবে। এই ২ টা বেপার code লিখে দেখি। </p>\n<p><strong><code class=\"language-text\">let</code></strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ReferenceError</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong><code class=\"language-text\">const</code></strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">// SyntaxError</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"functions-hoisting-ফাঙ্কশনস-হইস্টিং\"><a href=\"#functions-hoisting-%E0%A6%AB%E0%A6%BE%E0%A6%99%E0%A7%8D%E0%A6%95%E0%A6%B6%E0%A6%A8%E0%A6%B8-%E0%A6%B9%E0%A6%87%E0%A6%B8%E0%A7%8D%E0%A6%9F%E0%A6%BF%E0%A6%82\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Functions Hoisting (ফাঙ্কশনস হইস্টিং)</h2>\n<p>আমরা যদি JavaScript এর function কে ২ ভাগে ভাগ করি সেটা হবে:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- Function declarations\n- Function expressions</code></pre></div>\n<p>Function declarations hoisted কিন্তু function expressions hoisted না। আমরা ২ টার code করে দেখবো কি ভাবে বেপারটা হয়। </p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token function\">callMe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hoisted</span></span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">callMe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hoisted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>এই function টা hoisted হওয়ার পর আসলে যেমন হবে। </p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">callMe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hoisted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token function\">callMe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hoisted</span></span></code></pre></div>\n<p>আর একটা example দেখি function expressions নিয়ে। </p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token function\">callMe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// TypeError</span></span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">callMe</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hoisted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>এই function টা hoisted হওয়ার পর আসলে যেমন হবে।</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">var</span> callMe<span class=\"token punctuation\">;</span></span><span class=\"token function\">callMe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// TypeError</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token function-variable function\">callMe</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hoisted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span></span></code></pre></div>\n<h2 id=\"variable-vs-function-hoisting\"><a href=\"#variable-vs-function-hoisting\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Variable vs Function Hoisting</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. function declaration থেকে variable assignment এর precedence সব সময় বেশি হবে। \n2. variable declaration এর থেকে function declaration এর precedence সব সময় বেশি হবে। </code></pre></div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">var</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></span><span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"number\"</span></code></pre></div>\n<p>function declaration hoisted হয় variable declaration উপর কিন্তু variable assignment এর উপর হয় না। </p>\n<p>এখন নিচের code এর output টা ঠিকঠাক মতো guess করার চেষ্টা করি। </p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> alpha <span class=\"token operator\">=</span> <span class=\"token string\">'alpha'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> beta <span class=\"token operator\">=</span> <span class=\"token string\">'beta'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ??</span></span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">log</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>beta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>alpha<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ??</span></span></code></pre></div>\n<p>এই code টা hoisted হওয়ার পর আসলে যেমন হবে।</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> alpha <span class=\"token operator\">=</span> <span class=\"token string\">'alpha'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> beta <span class=\"token operator\">=</span> <span class=\"token string\">'beta'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>alpha<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> log<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ignored because log is already defined</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// alpha</span></span>\n<span class=\"token function-variable function\">log</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>beta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// beta</span></span></code></pre></div>\n<p align=\"center\">\n  <img src=\"/codesnap/1c2eb6a89bccd76132feefc2280dee35/tenor.gif\" alt=\"tenor.gif\">\n</p>","timeToRead":5,"frontmatter":{"title":"Hoisting in JavaScript","date":"October 30, 2019","spoiler":"Hoisting একটি JavaScript mechanism যেখানে code execution করার আগে variable এবং function declarations তাদের scope এ সবার উপরে নিয়ে যাওয়া হয়।","author":"Prosen Ghosh","occupation":"Full Stack Developer @ HungryNaki","twitter":"prosenghosh25","gitHub":"Prosen-Ghosh","stackOverflow":"3290456/prosen-ghosh","linkedin":"prosen-ghosh","tags":"JavaScript,Hoisting"},"fields":{"slug":"/javascript/hoisting-in-javascript/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/javascript/hoisting-in-javascript/"}}}